Phase 1 - Port
	Maintaining this game in Flash is costly and reaching the end of easy modification. The game needs to be ported to a new platform that will allow it be expanded upon and enhanced easily, freely, and cheaply. XNA is the right fit for this.

Sprint 1 - Raw transfer
Goal - Translate code and data from flash to c#. No arising issues from a raw translation or bug fixes required.
Tasks:
- Create C# project
- Recreate the class structure and copy in AS code commented out
- Extract images from the original game
- Get the grid to render
- Get the units to render
- Implement sides and colouring
- Implement AI vs AI play
- Set up source control

Sprint 2 - UI
Goal - Arrange and implement the games UI interface
- Allow the grid position to be adjusted by the calling code
- Extract the old UI tutorial Imagery and render it
- rearrange all of the elements into a nice layout
- Implement relative sizing and placement for all items (meaning create a basic layout engine)

Sprint 3 - Cleanup
Goal - Bring the game up to the code standard it had in Flash, taking advantage of C# features to simplify the codebase.
- Pull the constants into enums
- Rename Redundant namespaces
- add class properties and reevaluate member protections
- comment everywhere that makes sense
- genericize classes where possible

Phase 2 - Enhancement
	Implement the obvious features, ones that will be needed to make the game playble and testable.
	
Sprint 1 - Finished AI
Goal - Make the AI a worthy opponent and eliminate the pathfinding issues that are still in AI v AI games.
- Investigate various pathfinding techniques
- Implement the most appropriate
- Make sure AI v AI can complete a match

Sprint 2 - Updated Input
Goal - Introduce Keyboard control and a Logging input system
- add a selection box that is keyboard controlled
- limit the selection box at the appropriate times
- add mouse input to control the box
- add a log of the inputs
- adjust AI to move units through selection
- allow the game to read this log and play using it.
- Inform the user whose turn it is with the colour of the selector
- Add a completed game message

Sprint 3 - Network Play
Goal - Allow the game to be played by a pair of people over the internet.
- Import existing networking library and modify it if XNA works differently
- Create a hard coded connection using the HTPC and it's static ip
- Add a chat window
- Attempt to chat with another instance of the game
- Add a way to distinguish input commands from chat commands
- Hook that input into the games input system
- Distinguish which player is playing which colour

Sprint 4 - Make Libraries
Goal - Pull the Input and Network features that aren't specific to the game into libraries for use on other projects.
- Create a new project for the input library
- add surce control
- Pull out the keyboard and mouse inputs
- Pull out the Logging
- Seprate the selection movement from function of an up move.
- Pull out XNA specific changes if necessary to networking
- Pull out input and network integration into network

Milestone - Port (v2.0) Complete

Phase 3 - Planning
	Once ported, which direction to take it and what improvements to make in what order is important. If done correctly some of the enhancements can be used for other projects, and this learning project can help with actual ones in the future.
	
Sprint 1 - Brainstorming
Goal - Generate a list of ideas and issues to address.
- Playtest with 5 people and get there feedback, save the logs
- Test in 1 on 1 and do the same
- Have a session examining the feedback and coming up with designs
- Have a session of idea generation

Sprint 3 - Design
Goal - Flush out the remaining ideas
- Remove the unfeasible or bad ideas
- Focus the remaining ideas with specific details
- Repeat the above until the remaining stuff has enough detail

Sprint 3 - Tasking
Goal - Expand this plan to include the features flushed out in the last sprint